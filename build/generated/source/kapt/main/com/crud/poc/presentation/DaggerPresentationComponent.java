// Generated by Dagger (https://dagger.dev).
package com.crud.poc.presentation;

import com.crud.poc.business.UserService;
import com.crud.poc.persistence.PersistenceModule;
import com.crud.poc.persistence.PersistenceModule_ProvideDatabaseFactory;
import com.crud.poc.persistence.UserDao;
import com.crud.poc.presentation.controllers.UserController;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerPresentationComponent implements PresentationComponent {
  private DaggerPresentationComponent() {

  }

  public static Builder builder() {
    return new Builder();
  }

  public static PresentationComponent create() {
    return new Builder().build();
  }

  @Override
  public RequestComponent requestComponent(RequestModule module) {
    Preconditions.checkNotNull(module);
    return new RequestComponentImpl(module);
  }

  public static final class Builder {
    private Builder() {
    }

    public PresentationComponent build() {
      return new DaggerPresentationComponent();
    }
  }

  private final class RequestComponentImpl implements RequestComponent {
    private final RequestModule requestModule;

    private final PersistenceModule persistenceModule;

    private RequestComponentImpl(RequestModule module) {
      this.requestModule = module;
      this.persistenceModule = new PersistenceModule();
    }

    private UserDao getUserDao() {
      return new UserDao(PersistenceModule_ProvideDatabaseFactory.provideDatabase(persistenceModule));
    }

    private UserService getUserService() {
      return new UserService(getUserDao());
    }

    @Override
    public UserController getUserController() {
      return new UserController(RequestModule_ProvideApplicationCallFactory.provideApplicationCall(requestModule), getUserService());
    }
  }
}
